const path = require('path');
const webpack = require('webpack');
const nodeExternals = require('webpack-node-externals');

module.exports = {
  entry: './src/index.tsx',
  target: 'node',
  externals: [nodeExternals()],
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: '[name].js',
    libraryTarget: 'commonjs2'
  },
  resolve: {
    extensions: ['.tsx', '.ts', '.js', '.jsx'],
    fallback: {
      "crypto": require.resolve("crypto-browserify"),
      "stream": require.resolve("stream-browserify"),
      "util": require.resolve("util/"),
      "http": require.resolve("stream-http"),
      "buffer": require.resolve("buffer/")
    }
  },
  plugins: [
    new webpack.ProvidePlugin({
      Buffer: ['buffer', 'Buffer'],
      process: 'process/browser'
    }),
    new webpack.DefinePlugin({
      'process.env.NODE_ENV': JSON.stringify('production')
    })
  ],
  module: {
    rules: [
      {
        test: /\.(ts|tsx)$/,
        use: [
          {
            loader: 'ts-loader',
            options: {
              transpileOnly: true,
              compilerOptions: {
                jsx: 'react',
                module: 'commonjs',
                target: 'es2017'
              }
            }
          }
        ],
        exclude: /node_modules/
      }
    ]
  }
};


//index.tsx

import { ArakooServer } from "@arakoodev/edgechains.js/arakooserver"
const server = new ArakooServer();
import "htmx"
import "hyperscript"
const app = server.createApp();

app.get("/", (c) => {
    //@ts-ignore
    return c.html(`<html>
        <body>
            <div className="p-8 px-20 h-full w-full flex flex-col items-center justify-center text-center">
                <button
                    className="ml-4 px-6 py-3 rounded-md bg-blue-500 hover:bg-blue-600 text-white font-medium focus:outline-none focus:ring-2 focus:ring-blue-500 transition-transform transform-gpu duration-300 ease-in-out hover:translate-y-[-5px] hover:scale-105"
                    id="Send"
                    _="on click js console.log('RetellWebClient') end"
                >
                    Send
                </button>
            </div>
        </body>
    </html>`);
    // return c.json({});
})

server.listen(3000)